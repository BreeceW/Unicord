<UserControl
    x:Class="Unicord.Universal.Controls.MessageViewer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fcu="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 5)"
    xmlns:local="using:Unicord.Universal.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:wam="using:WamWooWam.Uwp.UI.Controls"
    xmlns:entities="using:DSharpPlus.Entities"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    x:Name="self"
    d:DesignHeight="300"
    d:DesignWidth="400"
    Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}"
    Loaded="UserControl_Loaded"
    Unloaded="UserControl_Unloaded"
    mc:Ignorable="d">
    <!--<Rectangle x:Name="bg" Visibility="Collapsed" Fill="{StaticResource MentionBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,20,0,0"/>-->

    <Grid x:Name="grid"
          Background="{Binding Background, ElementName=self}"
          IsHitTestVisible="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="48" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Grid.ContextFlyout>
            <MenuFlyout>
                <MenuFlyoutItem
                        x:Name="AddReactionMenuItem"
                        x:Load="{x:Bind _canReact}"
                        x:Uid="/Flyouts/AddReaction"
                        Icon="Emoji"
                        Click="AddReactionMenuItem_Click"/>

                <MenuFlyoutItem
                        Icon="Copy"
                        x:Uid="/Flyouts/Copy"
                        Click="CopyFlyoutItem_Click" />

                <MenuFlyoutSeparator  />

                <MenuFlyoutItem
                        x:Name="profileMenuItem"
                        x:Uid="/Flyouts/Profile"
                        Click="profileMenuItem_Click"
                        Icon="OtherUser"
                        Text="Profile" />

                <MenuFlyoutItem
                        x:Name="message"
                        x:Uid="/Flyouts/Message"
                        Command="{StaticResource MessageUserCommand}"
                        CommandParameter="{Binding Author}"
                        Icon="Message"/>

                <MenuFlyoutSeparator />

                <MenuFlyoutItem
                        x:Name="changeNickname"
                        x:Uid="/Flyouts/ChangeNickname"
                        Command="{StaticResource ChangeNicknameCommand}"
                        CommandParameter="{Binding Author}"
                        Icon="Rename"/>

                <MenuFlyoutItem
                        x:Name="pinMessage"
                        x:Uid="/Flyouts/Pin"
                        Command="{StaticResource PinMessageCommand}"
                        CommandParameter="{Binding}"
                        Icon="Pin"/>

                <MenuFlyoutItem
                        x:Name="kick"
                        x:Uid="/Flyouts/Kick"
                        Foreground="{ThemeResource ErrorTextForegroundBrush}"
                        Icon="LeaveChat"
                        Command="{StaticResource KickCommand}"
                        CommandParameter="{Binding Author}"
                        Visibility="{x:Bind _kickMembers, Converter={StaticResource BoolVisibilityConverter}}"  />

                <MenuFlyoutItem
                        x:Name="ban"
                        x:Uid="/Flyouts/Ban"
                        Foreground="{ThemeResource ErrorTextForegroundBrush}"
                        Icon="Remove"
                        Command="{StaticResource BanCommand}"
                        CommandParameter="{Binding Author}"
                        Visibility="{x:Bind _banMembers, Converter={StaticResource BoolVisibilityConverter}}"  />

                <MenuFlyoutSeparator
                        Visibility="{x:Bind ShowBottomSeparator, Converter={StaticResource BoolVisibilityConverter}}"  />

                <MenuFlyoutItem
                        x:Name="editMenuFlyout"
                        Click="EditItem_Click"
                        Icon="Edit"
                        x:Uid="/Flyouts/Edit"
                        Visibility="{x:Bind CanEdit, Converter={StaticResource BoolVisibilityConverter}}" />

                <MenuFlyoutItem
                        x:Name="delete"
                        x:Uid="/Flyouts/Delete"
                        Icon="Delete"
                        Command="{StaticResource DeleteMessageCommand}"
                        CommandParameter="{Binding}"
                        Foreground="{ThemeResource ErrorTextForegroundBrush}"
                        Text="Delete Message"
                        Visibility="{Binding IsEnabled, ElementName=delete, Converter={StaticResource BoolVisibilityConverter}}" />

                <MenuFlyoutSeparator 
                        Visibility="{Binding IsEnabled, ElementName=delete, Converter={StaticResource BoolVisibilityConverter}}" />

                <MenuFlyoutItem
                        x:Uid="/Flyouts/EditMode"
                        Visibility="{Binding IsEnabled, ElementName=delete, Converter={StaticResource BoolVisibilityConverter}}"
                        Click="EditModeItem_Click"
                        Text="Edit Mode">
                    <MenuFlyoutItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE762;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
            </MenuFlyout>
        </Grid.ContextFlyout>

        <Ellipse
                x:Name="imageContainer"
                Width="36"
                Height="36"
                VerticalAlignment="Top"
                Visibility="{Binding CollapsedVisibility, ElementName=self}">
            <Ellipse.Fill>
                <ImageBrush>
                    <ImageBrush.ImageSource>
                        <BitmapImage
                                DecodePixelHeight="36"
                                DecodePixelWidth="36"
                                UriSource="{Binding Author.NonAnimatedAvatarUrl}" />
                    </ImageBrush.ImageSource>
                </ImageBrush>
            </Ellipse.Fill>
        </Ellipse>

        <Grid x:Name="mainGrid" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid x:Name="authorNameContent"
                  Grid.Row="0"
                  Margin="8,0,4,2"
                  Visibility="{x:Bind CollapsedVisibility}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <local:UsernameControl x:Name="authorName" User="{Binding Author}" FontWeight="Bold" Tapped="AuthorName_Tapped"/>
                <TextBlock Grid.Column="2" Margin="8,1" FontSize="11" VerticalAlignment="Bottom" Text="{Binding Timestamp, Converter={StaticResource DateTimeConverter}, Mode=OneWay}" Opacity="0.4"/>
            </Grid>
            <Grid Grid.Row="1" Margin="8,0,2,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid
                        x:Name="messageEditContainer"
                        x:DeferLoadStrategy="Lazy"
                        Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}"
                        Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="messageEditBox"
                                 MaxHeight="100"
                                 fcu:PreviewKeyUp="messageEditBox_PreviewKeyUp"
                                 AcceptsReturn="False"
                                 Style="{ThemeResource MessageTextBoxStyle}"
                                 Text="{Binding Content, Mode=OneWay}"
                                 TextWrapping="Wrap" />
                    <Button x:Name="messageEditFinishButton"
                                Grid.Column="1"
                                Content="&#xE73E;"
                                Style="{ThemeResource IconButtonStyle}"
                                Click="messageEditFinishButton_Click" />
                    <Button x:Name="messageEditCancelButton"
                                Grid.Column="2"
                                Content="&#xE711;"
                                Style="{ThemeResource IconButtonStyle}"
                                Click="messageEditCancelButton_Click" />
                </Grid>

                <wam:MarkdownTextBlock x:Name="markdown"
                                       UseLayoutRounding="False"
                                       Channel="{Binding Channel}"
                                        IsTextSelectionEnabled="False"
                                        Text="{Binding Content}"
                                        WrapCodeBlock="True"/>
            </Grid>
            <StackPanel x:Name="embeds" Grid.Row="2" />
            <ItemsControl Visibility="{Binding Reactions, Converter={ThemeResource BoolVisibilityConverter}}" Margin="8,4,0,0" ItemsSource="{Binding Reactions}" Grid.Row="3">
                <ItemsControl.ItemTemplate>
                    <DataTemplate x:DataType="entities:DiscordReaction">
                        <ToggleButton x:Name="ReactionToggleButton" ToolTipService.ToolTip="{Binding Emoji.Name}" IsChecked="{Binding IsMe}" Checked="ReactionToggleButton_Checked" Unchecked="ReactionToggleButton_Unchecked" Padding="0" BorderThickness="2">
                           <Grid Margin="2,0,4,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="18"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Image Width="18" Height="18" Source="{Binding Emoji.Url}" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding Emoji.Unicode}" />

                                <TextBlock Grid.Column="1" Margin="8,0,0,0" Text="{Binding Count}" FontSize="12" VerticalAlignment="Center"/>
                            </Grid>
                        </ToggleButton>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="4" VerticalSpacing="4"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </Grid>
    </Grid>
</UserControl>
