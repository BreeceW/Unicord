<Page
    x:Name="self"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Unicord.Universal.Pages"
    xmlns:dis="using:Unicord.Universal"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Unicord.Universal.Controls"
    xmlns:sub="using:Unicord.Universal.Pages.Subpages"
    xmlns:media="using:Microsoft.Toolkit.Uwp.UI.Media"
    xmlns:discord="using:DSharpPlus.Entities"
    xmlns:lib="using:Microsoft.UI.Xaml.Controls"
    xmlns:controls1="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:settings="using:Unicord.Universal.Pages.Settings"
    x:Class="Unicord.Universal.Pages.DiscordPage"
    mc:Ignorable="d" Loaded="Page_Loaded" Unloaded="Page_Unloaded">
    <Page.Resources>
        <CircleEase EasingMode="EaseInOut" x:Key="Ease"/>
        <Storyboard x:Key="OpenSettingsDesktopStoryboard" x:Name="OpenSettingsDesktopStoryboard">
            <DoubleAnimation 
                To="0"
                From="450"
                Storyboard.TargetName="SettingsPaneTransform"
                Storyboard.TargetProperty="X"
                Duration="00:00:00.50"
                EasingFunction="{StaticResource Ease}"/>
            <DoubleAnimation
                To="1"
                Storyboard.TargetName="SettingsOverlayBackground"
                Storyboard.TargetProperty="Opacity"
                Duration="00:00:00.50"                            
                EasingFunction="{StaticResource Ease}"/>
        </Storyboard>
        <Storyboard x:Key="OpenSettingsMobileStoryboard" x:Name="OpenSettingsMobileStoryboard">
            <DoubleAnimation 
                To="0"
                From="640"
                Storyboard.TargetName="SettingsPaneTransform"
                Storyboard.TargetProperty="Y"
                Duration="00:00:00.50"
                EasingFunction="{StaticResource Ease}"/>
            <DoubleAnimation 
                To="1"
                Storyboard.TargetName="SettingsOverlayBackground"
                Storyboard.TargetProperty="Opacity"
                Duration="00:00:00.50"
                EasingFunction="{StaticResource Ease}"/>
        </Storyboard>
        <Storyboard x:Key="CloseSettingsDesktopStoryboard" x:Name="CloseSettingsDesktopStoryboard" Completed="CloseSettingsStoryboard_Completed">
            <DoubleAnimation 
                From="0"
                To="450"
                Storyboard.TargetName="SettingsPaneTransform"
                Storyboard.TargetProperty="X"
                Duration="00:00:00.33"
                EasingFunction="{StaticResource Ease}"/>
            <DoubleAnimation 
                To="0"
                Storyboard.TargetName="SettingsOverlayBackground"
                Storyboard.TargetProperty="Opacity"
                Duration="00:00:00.33"                            
                EasingFunction="{StaticResource Ease}"/>
        </Storyboard>
        <Storyboard x:Key="CloseSettingsMobileStoryboard" x:Name="CloseSettingsMobileStoryboard" Completed="CloseSettingsStoryboard_Completed">
            <DoubleAnimation 
                x:Name="MobileHeightAnimation"
                From="0"
                To="640"
                Storyboard.TargetName="SettingsPaneTransform"
                Storyboard.TargetProperty="Y"
                Duration="00:00:00.33"
                EasingFunction="{StaticResource Ease}"/>
            <DoubleAnimation 
                To="0"
                Storyboard.TargetName="SettingsOverlayBackground"
                Storyboard.TargetProperty="Opacity"
                Duration="00:00:00.33"                            
                EasingFunction="{StaticResource Ease}"/>
        </Storyboard>
    </Page.Resources>
    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="splitView.DisplayMode" Value="Inline" />
                        <Setter Target="splitView.IsPaneOpen" Value="True" />
                        <Setter Target="sidebarMainGrid.Background" Value="{ThemeResource SidebarPrimaryAcrylicWindowBrush}"/>
                        <Setter Target="sidebarSecondaryGrid.Background" Value="{ThemeResource SidebarSecondaryAcrylicWindowBrush}"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="splitView.DisplayMode" Value="Overlay" />
                        <Setter Target="sidebarMainGrid.Background" Value="{ThemeResource SidebarPrimaryAcrylicElementBrush}"/>
                        <Setter Target="sidebarSecondaryGrid.Background" Value="{ThemeResource SidebarSecondaryAcrylicElementBrush}"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <controls:SwipeableSplitView 
            x:Name="splitView"
            CompactPaneLength="56"
            OpenPaneLength="275"
            PaneBackground="Transparent">
            <controls:SwipeableSplitView.Pane>
                <Grid x:Name="splitPane">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="56"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Grid x:Name="sidebarMainGrid">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Grid x:Name="iconGrid" Visibility="Collapsed" Height="42">
                            <Image Source="{StaticResource DiscordClyde}" Width="22" Height="22" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Grid>

                        <ListView x:Name="guildsList" ItemTemplate="{StaticResource GuildsListTemplate}" Grid.Row="1" ShowsScrollingPlaceholders="False" ItemsSource="{x:Bind _guilds}" CanDrag="True" AllowDrop="True" CanDragItems="True" CanReorderItems="True" DragItemsCompleted="guildsList_DragItemsCompleted" ScrollViewer.VerticalScrollBarVisibility="Hidden" SelectionChanged="guildsList_SelectionChanged">
                            <ListView.Header>
                                <ListViewItem x:Name="friendsItem" Tapped="friendsItem_Tapped" Margin="0,10" Padding="0" MinWidth="0" HorizontalContentAlignment="Stretch">
                                    <SymbolIcon Width="36" Height="36" Symbol="People"></SymbolIcon>
                                </ListViewItem>
                            </ListView.Header>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.Footer>
                                <StackPanel Margin="0,10">
                                    <ListViewItem x:Name="settingsItem" Tapped="SettingsItem_Tapped" Padding="0" MinWidth="0" HorizontalContentAlignment="Stretch">
                                        <SymbolIcon Width="36" Height="36" Symbol="Setting"></SymbolIcon>
                                    </ListViewItem>
                                    <!--
                                        <ListViewItem x:Name="feedbackItem" Padding="0" MinWidth="0" HorizontalContentAlignment="Stretch">
                                            <FontIcon Width="36" Height="36" Glyph="&#xED15;"></FontIcon>
                                        </ListViewItem>
                                    -->
                                </StackPanel>
                            </ListView.Footer>
                        </ListView>
                    </Grid>

                    <Grid x:Name="sidebarSecondaryGrid" Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Height="42">
                            <TextBlock Text="{Binding Content.Tag, ElementName=sidebarFrame, FallbackValue=Unicord}" Grid.Column="1" Margin="15,0" VerticalAlignment="Center" FontSize="18" FontWeight="SemiBold" TextTrimming="CharacterEllipsis" />
                        </Grid>

                        <AutoSuggestBox Grid.Row="1" Style="{StaticResource CleanAutoSuggestBox}" BorderThickness="1" QueryIcon="Find" PlaceholderText="Find some people!" Margin="10,5,10,10"/>

                        <Frame x:Name="sidebarFrame" Grid.Row="2"/>
                    </Grid>

                    <!--                    

                    <Grid x:Name="userStatusContainer" Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <Canvas Width="40" Height="40" Margin="10,10,0,10">
                            <Ellipse Width="40" Height="40" Canvas.Left="0" Canvas.Top="0">
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="{x:Bind dis:App.Discord.CurrentUser.NonAnimatedAvatarUrl}"/>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse Canvas.Left="24" Canvas.Top="24" Width="16" Height="16" StrokeThickness="2" Stroke="{Binding ElementName=userStatusContainer, Path=Background}">
                                <Ellipse.Fill>
                                    <SolidColorBrush Color="{x:Bind dis:App.Discord.CurrentUser.Presence, Converter={StaticResource PresenceColourConverter}}"/>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Canvas>

                        <StackPanel Margin="10,0" Grid.Column="1" VerticalAlignment="Center">
                            <TextBlock FontWeight="Bold" Text="{x:Bind Path=dis:App.Discord.CurrentUser.Username}" TextTrimming="CharacterEllipsis"/>
                            <TextBlock FontSize="12"><Run Text="#"/><Run Text="{x:Bind Path=dis:App.Discord.CurrentUser.Discriminator}"/></TextBlock>
                        </StackPanel>-->

                    <!--
                        <Button x:Name="settingsButton" Grid.Column="2" VerticalAlignment="Center" Click="settingsButton_Click" Background="Transparent">
                            <SymbolIcon Symbol="Setting" Margin="-3,-1"/>
                        </Button>
                    </Grid>
                        -->
                </Grid>
            </controls:SwipeableSplitView.Pane>
            <Grid Tapped="Grid_Tapped" Background="{ThemeResource MainBackgroundBrush}">
                <Frame x:Name="mainFrame" SourcePageType="sub:FriendsPage" Navigated="mainFrame_Navigated"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition MinWidth="375" MaxWidth="520"/>
                    </Grid.ColumnDefinitions>

                    <controls1:InAppNotification x:Name="notification" Grid.Column="1" BorderThickness="1"
                                        AnimationDuration="00:00:00.1000000" VerticalAlignment="Top"
                                        HorizontalAlignment="Stretch" Tapped="Notification_Tapped" Padding="15"
                                        Margin="0,25,5,0" ShowDismissButton="False" VerticalOffset="-100" FontSize="{ThemeResource ContentControlFontSize}"
                                        StackMode="StackInFront" Background="{ThemeResource SystemControlAcrylicElementMediumHighBrush}">
                       
                    </controls1:InAppNotification>
                </Grid>
            </Grid>
        </controls:SwipeableSplitView>
        <Grid x:Name="SettingsOverlayGrid" Visibility="Collapsed">
            <Grid x:Name="SettingsOverlayBackground" Background="{ThemeResource SystemControlBackgroundAltMediumHighBrush}" Opacity="0" Tapped="SettingsOverlayBackground_Tapped"/>
            <Grid x:Name="SettingsContainer" Background="{ThemeResource MainBackgroundBrush}">
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="SettingsPaneTransform" />
                </Grid.RenderTransform>
                <Frame x:Name="SettingsGrid" Grid.Row="1" SourcePageType="settings:SettingsPage"/>
            </Grid>
        </Grid>
    </Grid>
</Page>
