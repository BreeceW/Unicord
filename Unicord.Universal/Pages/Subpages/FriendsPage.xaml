<Page
    x:Class="Unicord.Universal.Pages.Subpages.FriendsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Unicord.Universal.Pages.Subpages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"   
    xmlns:b="using:Unicord.Universal.Behaviours"
    xmlns:lib="using:Microsoft.UI.Xaml.Controls"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:commands="using:Unicord.Universal.Commands"
    xmlns:discord="using:DSharpPlus.Entities"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:models="using:Unicord.Universal.Models"
    NavigationCacheMode="Required"
    mc:Ignorable="d" x:DefaultBindMode="OneWay">
    <Page.DataContext>
        <models:FriendsViewModel/>
    </Page.DataContext>

    <Page.Resources>
        <Style x:Key="RelationshipItemContainerStyle" BasedOn="{StaticResource GridViewItemRevealStyle}" TargetType="GridViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>

        <!-- is there a way to simplify this? -->
        <DataTemplate x:Key="FriendRelationshipTemplate" x:DataType="discord:DiscordRelationship">
            <Grid Padding="10" HorizontalAlignment="Stretch" Background="#00FFFFFF" PointerCanceled="Grid_PointerCanceled" PointerEntered="Grid_PointerEntered" PointerExited="Grid_PointerExited">
                <Grid.Resources>
                    <Storyboard x:Key="pointerEntered" Duration="00:00:00.20">
                        <DoubleAnimation Storyboard.TargetName="mainContent" Storyboard.TargetProperty="Opacity" Duration="00:00:00.20" To="0"/>
                        <DoubleAnimation Storyboard.TargetName="overlayContent" Storyboard.TargetProperty="Opacity" Duration="00:00:00.20" To="1"/>
                    </Storyboard>
                    <Storyboard x:Key="pointerLeft" Duration="00:00:00.20">
                        <DoubleAnimation Storyboard.TargetName="mainContent" Storyboard.TargetProperty="Opacity" Duration="00:00:00.20" To="1"/>
                        <DoubleAnimation Storyboard.TargetName="overlayContent" Storyboard.TargetProperty="Opacity" Duration="00:00:00.20" To="0"/>
                    </Storyboard>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Canvas Width="64" Height="64" Margin="0,0,12,0">
                    <Ellipse Width="64" Height="64">
                        <Ellipse.Fill>
                            <ImageBrush>
                                <ImageBrush.ImageSource>
                                    <BitmapImage UriSource="{Binding User.AvatarUrl}" DecodePixelType="Logical" DecodePixelWidth="64" DecodePixelHeight="64"/>
                                </ImageBrush.ImageSource>
                            </ImageBrush>
                        </Ellipse.Fill>
                    </Ellipse>
                    <Ellipse Width="20" Height="20" Canvas.Left="44" Canvas.Top="44" StrokeThickness="2" Stroke="#FF171717">
                        <Ellipse.Fill>
                            <SolidColorBrush Color="{Binding User.Presence, Converter={StaticResource PresenceColourConverter}}"/>
                        </Ellipse.Fill>
                    </Ellipse>
                </Canvas>
                <Grid Grid.Column="1" HorizontalAlignment="Stretch">
                    <Grid x:Name="mainContent" VerticalAlignment="Center" Opacity="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Name="text" Text="{Binding User.Username}" FontWeight="Bold"/>
                        <TextBlock Grid.Row="1" FontSize="12" x:Name="presenceActivity" Visibility="{Binding User.Presence.Activity.Name, Converter={StaticResource BoolVisibilityConverter}, FallbackValue=Collapsed}">
                            <Run Text="{Binding User.Presence, Converter={StaticResource PresenceTextConverter}}"/>
                        </TextBlock>
                    </Grid>
                    <StackPanel x:Name="overlayContent" DataContext="{Binding}" Orientation="Horizontal" Opacity="0" VerticalAlignment="Center" HorizontalAlignment="Right">
                        <Button Style="{ThemeResource IconButtonStyle}" BorderThickness="0" Margin="4,0">
                            <SymbolIcon Symbol="VideoChat"/>
                        </Button>
                        <Button Style="{ThemeResource IconButtonStyle}" BorderThickness="0" Margin="4,0">
                            <SymbolIcon Symbol="Phone"/>
                        </Button>
                        <Button Style="{ThemeResource IconButtonStyle}" Command="{StaticResource MessageUserCommand}" CommandParameter="{Binding User}" BorderThickness="0" Margin="4,0">
                            <SymbolIcon Symbol="Message"/>
                        </Button>
                    </StackPanel>
                </Grid>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <controls:DropShadowPanel Style="{ThemeResource DropShadowPanelStyle}">

        <Grid Background="{ThemeResource MainBackgroundBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Margin="12,12,12,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="showSidebarButton" Click="ShowSidebarButton_Click" VerticalAlignment="Center" Style="{ThemeResource IconButtonStyle}" Content="&#xE700;"/>
                <TextBlock x:Uid="/FriendsPage/FriendsHeader" Style="{ThemeResource SubheaderTextBlockStyle}" Grid.Column="1" Margin="12" Grid.Row="2"/>
            </Grid>
            <Pivot Margin="12,0,12,12" 
                   IsHeaderItemsCarouselEnabled="False" 
                   ManipulationMode="None" 
                   SelectedIndex="1" 
                   Grid.Row="3">
                <Pivot.Items>
                    <PivotItem x:Uid="/FriendsPage/FriendsAllItem">
                        <GridView x:Name="AllView"
                                  ItemsSource="{Binding All}"
                                  SelectionMode="None"
                                  IsItemClickEnabled="True"
                                  ItemClick="OnItemClick"
                                  ItemTemplate="{StaticResource FriendRelationshipTemplate}"
                                  ItemContainerStyle="{ThemeResource RelationshipItemContainerStyle}"/>
                    </PivotItem>
                    <PivotItem x:Uid="/FriendsPage/FriendsOnlineItem">
                        <GridView x:Name="OnlineView"
                                  ItemsSource="{Binding Online}"
                                  SelectionMode="None"
                                  IsItemClickEnabled="True"
                                  ItemClick="OnItemClick"
                                  ItemTemplate="{StaticResource FriendRelationshipTemplate}"
                                  ItemContainerStyle="{ThemeResource RelationshipItemContainerStyle}"/>
                    </PivotItem>
                    <!-- 
                        these two groups should use different templates 
                        for accepting/declining requests and unblocking 
                    -->
                    <PivotItem x:Uid="/FriendsPage/FriendsPendingItem">
                        <GridView x:Name="PendingView"
                                  ItemsSource="{Binding Pending}"
                                  SelectionMode="None"
                                  IsItemClickEnabled="True"
                                  ItemClick="OnItemClick"
                                  ItemTemplate="{StaticResource FriendRelationshipTemplate}"
                                  ItemContainerStyle="{ThemeResource RelationshipItemContainerStyle}"/>
                    </PivotItem>
                    <PivotItem x:Uid="/FriendsPage/FriendsBlockedItem">
                        <GridView x:Name="BlockedView"
                                  ItemsSource="{Binding Blocked}"
                                  SelectionMode="None"
                                  IsItemClickEnabled="True"
                                  ItemClick="OnItemClick"
                                  ItemTemplate="{StaticResource FriendRelationshipTemplate}"
                                  ItemContainerStyle="{ThemeResource RelationshipItemContainerStyle}"/>
                    </PivotItem>
                </Pivot.Items>
            </Pivot>           
        </Grid>
        
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="769" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="showSidebarButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="showSidebarButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </controls:DropShadowPanel>
</Page>
