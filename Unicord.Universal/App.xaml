<Application
    x:Class="Unicord.Universal.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Unicord.Universal"
    xmlns:wam="using:WamWooWam.Uwp.UI.Controls"
    xmlns:media="using:Microsoft.UI.Xaml.Media"
    xmlns:converters="using:Unicord.Universal.Converters"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:ins="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 5)"
    xmlns:Windows10version1809="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 7)"
    xmlns:entities="using:DSharpPlus.Entities">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <SvgImageSource x:Key="DiscordClyde" UriSource="Assets/DiscordClyde.Light.svg" />
                    <SvgImageSource x:Key="DiscordLogo" UriSource="Assets/DiscordLogo.Light.svg"/>
                    <SvgImageSource x:Key="DiscordWordMark" UriSource="Assets/DiscordWordMark.Light.svg"/>
                    <media:AcrylicBrush x:Key="SidebarPrimaryAcrylicWindowBrush" BackgroundSource="HostBackdrop" TintOpacity="0.60" FallbackColor="White" TintColor="White" />
                    <media:AcrylicBrush x:Key="SidebarPrimaryAcrylicElementBrush" BackgroundSource="Backdrop" TintOpacity="0.60" FallbackColor="White" TintColor="White" />
                    <media:AcrylicBrush x:Key="SidebarSecondaryAcrylicWindowBrush" BackgroundSource="HostBackdrop" TintOpacity="0.80" FallbackColor="#FFF6F6F6" TintColor="#FFF6F6F6" />
                    <media:AcrylicBrush x:Key="SidebarSecondaryAcrylicElementBrush" BackgroundSource="Backdrop" TintOpacity="0.80" FallbackColor="#FFF6F6F6" TintColor="#FFF6F6F6" />
                    <SolidColorBrush x:Key="MainBackgroundBrush" Color="#FFF0F0F0"/>
                    <SolidColorBrush x:Key="ErrorTextForegroundBrush" Color="#FFC50500"/>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <SvgImageSource x:Key="DiscordClyde" UriSource="Assets/DiscordClyde.Dark.svg" />
                    <SvgImageSource x:Key="DiscordLogo" UriSource="Assets/DiscordLogo.Dark.svg"/>
                    <SvgImageSource x:Key="DiscordWordMark" UriSource="Assets/DiscordWordMark.Dark.svg"/>
                    <media:AcrylicBrush x:Key="SidebarPrimaryAcrylicWindowBrush" BackgroundSource="HostBackdrop" TintOpacity="0.60" FallbackColor="#FF0F0F0F" TintColor="#FF0F0F0F" />
                    <media:AcrylicBrush x:Key="SidebarPrimaryAcrylicElementBrush" BackgroundSource="Backdrop" TintOpacity="0.60" FallbackColor="#FF0F0F0F" TintColor="#FF0F0F0F" />
                    <media:AcrylicBrush x:Key="SidebarSecondaryAcrylicWindowBrush" BackgroundSource="HostBackdrop" TintOpacity="0.80" FallbackColor="#FF181818" TintColor="#FF181818" />
                    <media:AcrylicBrush x:Key="SidebarSecondaryAcrylicElementBrush" BackgroundSource="Backdrop" TintOpacity="0.80" FallbackColor="#FF181818" TintColor="#FF181818" />
                    <SolidColorBrush x:Key="MainBackgroundBrush" Color="#FF1C1C1C"/>
                    <SolidColorBrush x:Key="ErrorTextForegroundBrush" Color="#FFFFF000"/>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Default">
                    <SvgImageSource x:Key="DiscordLogo" UriSource="Assets/DiscordLogo.Light.svg"/>
                    <SvgImageSource x:Key="DiscordWordMark" UriSource="Assets/DiscordWordMark.Light.svg"/>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/Generic.xaml"/>
                <XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls"/>
            </ResourceDictionary.MergedDictionaries>

            <converters:PresenceColourConverter x:Key="PresenceColourConverter"/>
            <converters:PresenceTextConverter x:Key="PresenceTextConverter"/>
            <converters:HideOnNullConverter x:Key="HideOnNullConverter"/>
            <converters:ChannelSymbolConverter x:Key="ChannelSymbolConverter"/>
            <converters:BoolOpacityConverter x:Key="BoolOpacityConverter"/>
            <converters:BoolVisibilityConverter x:Key="BoolVisibilityConverter"/>
            <converters:TruncateConverter x:Key="TruncateConverter"/>
            <converters:ColourBrushConverter x:Key="ColourBrushConverter"/>
            <converters:BoolConverter x:Key="BoolConverter"/>
            <converters:ThumbnailImageConverter x:Key="ThumbnailImageConverter"/>
            <converters:DMNameConverter x:Key="DMNameConverter"/>
            <converters:DMIconConverter x:Key="DMIconConverter"/>

            <media:AcrylicBrush x:Key="OverlayBackdrop" TintColor="{ThemeResource SystemAltHighColor}" TintOpacity="0.33" FallbackColor="#80000000"/>

            <SolidColorBrush x:Key="MentionBrush" Color="{ThemeResource SystemAccentColor}" Opacity="0.1"/>
            <SolidColorBrush x:Key="TransparentBrush" Color="Transparent"/>

            <Style x:Key="StretchyIconButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonRevealStyle}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="Template" Value="{StaticResource IconButtonTemplate}"/>
            </Style>

            <Style x:Key="IconButtonStyle" TargetType="Button" BasedOn="{StaticResource StretchyIconButtonStyle}">
                <Setter Property="Width" Value="42"/>
                <Setter Property="MinHeight" Value="42"/>
            </Style>

            <Style x:Key="IconToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonRevealStyle}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Width" Value="42"/>
                <Setter Property="Height" Value="42"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="Template" Value="{StaticResource IconToggleButtonTemplate}"/>
            </Style>

            <GroupStyle x:Key="ChannelListGroupStyle" HidesIfEmpty="True">
                <GroupStyle.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Key.Name, FallbackValue={Binding Key}}" Style="{ThemeResource FlyoutPickerTitleTextBlockStyle}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"/>
                    </DataTemplate>
                </GroupStyle.HeaderTemplate>
            </GroupStyle>

            
            <DataTemplate x:Key="ChannelListTemplate">
                <Grid Name="grid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,15,0" IsHitTestVisible="True">
                    <ToolTipService.ToolTip>
                        <wam:MarkdownTextBlock Text="{Binding Topic}" FontSize="{ThemeResource ToolTipContentThemeFontSize}" Channel="{Binding}" />
                    </ToolTipService.ToolTip>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock FontSize="16" VerticalAlignment="Center" Margin="15,0,10,0" FontFamily="Segoe MDL2 Assets" Text="{Binding Converter={StaticResource ChannelSymbolConverter}}"/>
                    <TextBlock Grid.Column="1" FontSize="14" Text="{Binding Name}" VerticalAlignment="Center" HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" />

                    <Grid x:Name="unreadIndicator" Visibility="{Binding ReadState.Unread, Converter={StaticResource BoolVisibilityConverter}, FallbackValue=Collapsed}" MinWidth="4" Margin="0,2" HorizontalAlignment="Left" VerticalAlignment="Stretch" Background="{ThemeResource SystemControlForegroundAccentBrush}">
                        <TextBlock x:Name="mentionTextbox" VerticalAlignment="Center" Margin="2,0" Visibility="{Binding ReadState.MentionCount, Converter={StaticResource BoolVisibilityConverter}, FallbackValue=Collapsed}" Text="{Binding ReadState.MentionCount}" Foreground="{ThemeResource ComboBoxItemSelectedForegroundThemeBrush}"/>
                    </Grid>
                </Grid>
            </DataTemplate>

            <SolidColorBrush x:Key="SystemControlBackgroundChromeLowBrush" Color="{StaticResource SystemChromeLowColor}"/>
            <Style x:Key="HeaderToggleButtonStyle" TargetType="ToggleButton">
                <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}"/>
                <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
                <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundTransparentBrush}"/>
                <Setter Property="BorderThickness" Value="{ThemeResource ToggleButtonBorderThemeThickness}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                <Setter Property="UseSystemFocusVisuals" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid x:Name="RootGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                                <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.1" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="0.0"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListLowBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                                <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.1" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="0.0"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListMediumBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.1" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="0.0"/>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.1" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="0.0"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                                <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.1" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="{Binding Value, ElementName=ArrowRotation}"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListLowBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                                <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.1" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="{Binding Value, ElementName=ArrowRotation}"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListMediumBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.1" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="{Binding Value, ElementName=ArrowRotation}"/>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedDisabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation BeginTime="0:0:0" Duration="0:0:0.1" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="{Binding Value, ElementName=ArrowRotation}"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ExpandDirectionStates">
                                        <VisualState x:Name="RightDirection"/>
                                        <VisualState x:Name="DownDirection"/>
                                        <VisualState x:Name="LeftDirection">
                                            <VisualState.Setters>
                                                <Setter Target="ArrowRotation.Value" Value="-90"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="UpDirection">
                                            <VisualState.Setters>
                                                <Setter Target="ArrowRotation.Value" Value="-90"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Slider x:Name="ArrowRotation" Minimum="-180" Maximum="180" Value="90" Visibility="Collapsed"/>
                                <FontIcon x:Name="Arrow" FontFamily="Segoe MDL2 Assets" FontSize="12" Glyph="&#xE76C;" Margin="12" RenderTransformOrigin="0.5,0.5">
                                    <FontIcon.RenderTransform>
                                        <RotateTransform/>
                                    </FontIcon.RenderTransform>
                                </FontIcon>
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,12,0" Padding="{TemplateBinding Padding}" RenderTransformOrigin="0.5,0.5" VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Rectangle x:Name="HoverPanel" Grid.ColumnSpan="2" Fill="Transparent"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TransparentExpanderStyle" TargetType="controls:Expander">
                <Setter Property="Header" Value="Header"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="HeaderStyle" Value="{StaticResource HeaderToggleButtonStyle}"/>
                <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundChromeLowBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="controls:Expander">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="DisplayModeAndDirectionStates">
                                        <VisualState x:Name="VisibleLeft">
                                            <VisualState.Setters>
                                                <Setter Target="PART_LayoutTransformer.(Grid.Row)" Value="0"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.RowSpan)" Value="2"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.Column)" Value="1"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.ColumnSpan)" Value="1"/>
                                                <Setter Target="PART_MainContent.(Grid.Row)" Value="0"/>
                                                <Setter Target="PART_MainContent.(Grid.RowSpan)" Value="2"/>
                                                <Setter Target="PART_MainContent.(Grid.Column)" Value="0"/>
                                                <Setter Target="PART_MainContent.(Grid.ColumnSpan)" Value="1"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.Row)" Value="0"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.RowSpan)" Value="2"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.Column)" Value="0"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.ColumnSpan)" Value="1"/>
                                                <Setter Target="RotateLayoutTransform.Angle" Value="-90"/>
                                                <Setter Target="ColumnOne.Width" Value="*"/>
                                                <Setter Target="ColumnTwo.Width" Value="Auto"/>
                                                <Setter Target="PART_MainContent.RenderTransformOrigin" Value="1, 0.5"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <LinearDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                                    <LinearDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.15" Value="20"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimation Duration="0:0:0.2" From="0" Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1"/>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="VisibleDown">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <LinearDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                                    <LinearDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.15" Value="20"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1"/>
                                                <DoubleAnimation Duration="0:0:0.2" From="0" Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="VisibleRight">
                                            <VisualState.Setters>
                                                <Setter Target="PART_LayoutTransformer.(Grid.Row)" Value="0"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.RowSpan)" Value="2"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.Column)" Value="0"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.ColumnSpan)" Value="1"/>
                                                <Setter Target="PART_MainContent.(Grid.Row)" Value="0"/>
                                                <Setter Target="PART_MainContent.(Grid.RowSpan)" Value="2"/>
                                                <Setter Target="PART_MainContent.(Grid.Column)" Value="1"/>
                                                <Setter Target="PART_MainContent.(Grid.ColumnSpan)" Value="1"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.Row)" Value="0"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.RowSpan)" Value="2"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.Column)" Value="1"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.ColumnSpan)" Value="1"/>
                                                <Setter Target="RotateLayoutTransform.Angle" Value="-90"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <LinearDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                                    <LinearDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.15" Value="20"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimation Duration="0:0:0.2" From="0" Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1"/>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="VisibleUp">
                                            <VisualState.Setters>
                                                <Setter Target="PART_LayoutTransformer.(Grid.Row)" Value="1"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.RowSpan)" Value="1"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.Column)" Value="0"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.ColumnSpan)" Value="2"/>
                                                <Setter Target="PART_MainContent.(Grid.Row)" Value="0"/>
                                                <Setter Target="PART_MainContent.(Grid.RowSpan)" Value="1"/>
                                                <Setter Target="PART_MainContent.(Grid.Column)" Value="0"/>
                                                <Setter Target="PART_MainContent.(Grid.ColumnSpan)" Value="2"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.Row)" Value="0"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.RowSpan)" Value="1"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.Column)" Value="0"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.ColumnSpan)" Value="2"/>
                                                <Setter Target="RowOne.Height" Value="*"/>
                                                <Setter Target="RowTwo.Height" Value="Auto"/>
                                                <Setter Target="RotateLayoutTransform.Angle" Value="0"/>
                                                <Setter Target="PART_MainContent.RenderTransformOrigin" Value="0.5, 1"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <LinearDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                                    <LinearDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.15" Value="20"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1"/>
                                                <DoubleAnimation Duration="0:0:0.2" From="0" Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CollapsedLeft">
                                            <VisualState.Setters>
                                                <Setter Target="PART_LayoutTransformer.(Grid.Row)" Value="0"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.RowSpan)" Value="2"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.Column)" Value="1"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.ColumnSpan)" Value="1"/>
                                                <Setter Target="PART_MainContent.(Grid.Row)" Value="0"/>
                                                <Setter Target="PART_MainContent.(Grid.RowSpan)" Value="2"/>
                                                <Setter Target="PART_MainContent.(Grid.Column)" Value="0"/>
                                                <Setter Target="PART_MainContent.(Grid.ColumnSpan)" Value="1"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.Row)" Value="0"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.RowSpan)" Value="2"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.Column)" Value="0"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.ColumnSpan)" Value="1"/>
                                                <Setter Target="RotateLayoutTransform.Angle" Value="-90"/>
                                                <Setter Target="ColumnOne.Width" Value="*"/>
                                                <Setter Target="ColumnTwo.Width" Value="Auto"/>
                                                <Setter Target="PART_MainContent.RenderTransformOrigin" Value="1, 0.5"/>
                                                <Setter Target="PART_ExpanderToggleButton.Background" Value="{Binding Background, ElementName=PART_MainContent}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.15" From="1" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="0"/>
                                                <DoubleAnimation Duration="0:0:0.15" Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0"/>
                                                <DoubleAnimation Duration="0:0:0.15" Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="Collapsed"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CollapsedDown">
                                            <VisualState.Setters>
                                                <Setter Target="PART_ExpanderToggleButton.Background" Value="{Binding Background, ElementName=PART_MainContent}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.15" From="1" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="0"/>
                                                <DoubleAnimation Duration="0:0:0.15" Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1"/>
                                                <DoubleAnimation Duration="0:0:0.15" From="1" Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="Collapsed"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CollapsedRight">
                                            <VisualState.Setters>
                                                <Setter Target="PART_LayoutTransformer.(Grid.Row)" Value="0"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.RowSpan)" Value="2"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.Column)" Value="0"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.ColumnSpan)" Value="1"/>
                                                <Setter Target="PART_MainContent.(Grid.Row)" Value="0"/>
                                                <Setter Target="PART_MainContent.(Grid.RowSpan)" Value="2"/>
                                                <Setter Target="PART_MainContent.(Grid.Column)" Value="1"/>
                                                <Setter Target="PART_MainContent.(Grid.ColumnSpan)" Value="1"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.Row)" Value="0"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.RowSpan)" Value="2"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.Column)" Value="1"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.ColumnSpan)" Value="1"/>
                                                <Setter Target="RotateLayoutTransform.Angle" Value="-90"/>
                                                <Setter Target="PART_ExpanderToggleButton.Background" Value="{Binding Background, ElementName=PART_MainContent}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.15" From="1" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="0"/>
                                                <DoubleAnimation Duration="0:0:0.15" Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0"/>
                                                <DoubleAnimation Duration="0:0:0.15" Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="Collapsed"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CollapsedUp">
                                            <VisualState.Setters>
                                                <Setter Target="PART_LayoutTransformer.(Grid.Row)" Value="1"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.RowSpan)" Value="1"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.Column)" Value="0"/>
                                                <Setter Target="PART_LayoutTransformer.(Grid.ColumnSpan)" Value="2"/>
                                                <Setter Target="PART_MainContent.(Grid.Row)" Value="0"/>
                                                <Setter Target="PART_MainContent.(Grid.RowSpan)" Value="1"/>
                                                <Setter Target="PART_MainContent.(Grid.Column)" Value="0"/>
                                                <Setter Target="PART_MainContent.(Grid.ColumnSpan)" Value="2"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.Row)" Value="0"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.RowSpan)" Value="1"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.Column)" Value="0"/>
                                                <Setter Target="PART_ContentOverlay.(Grid.ColumnSpan)" Value="2"/>
                                                <Setter Target="RowOne.Height" Value="*"/>
                                                <Setter Target="RowTwo.Height" Value="Auto"/>
                                                <Setter Target="RotateLayoutTransform.Angle" Value="0"/>
                                                <Setter Target="PART_MainContent.RenderTransformOrigin" Value="0.5, 1"/>
                                                <Setter Target="PART_ExpanderToggleButton.Background" Value="{Binding Background, ElementName=PART_MainContent}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.15" From="1" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="0"/>
                                                <DoubleAnimation Duration="0:0:0.15" Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1"/>
                                                <DoubleAnimation Duration="0:0:0.15" From="1" Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_MainContent" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="Collapsed"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="PART_RootGrid" Background="{TemplateBinding Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="ColumnOne" Width="Auto"/>
                                        <ColumnDefinition x:Name="ColumnTwo" Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition x:Name="RowOne" Height="Auto"/>
                                        <RowDefinition x:Name="RowTwo" Height="*"/>
                                    </Grid.RowDefinitions>
                                    <ContentControl x:Name="PART_ContentOverlay" Content="{TemplateBinding ContentOverlay}" Grid.ColumnSpan="2" Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Grid.RowSpan="1" Grid.Row="1" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch">
                                        <ContentControl.RenderTransform>
                                            <ScaleTransform/>
                                        </ContentControl.RenderTransform>
                                    </ContentControl>
                                    <Grid x:Name="PART_MainContent" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Column="0" Grid.RowSpan="1" Grid.Row="1">
                                        <Grid.RenderTransform>
                                            <ScaleTransform/>
                                        </Grid.RenderTransform>
                                        <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" HorizontalContentAlignment="Stretch" Opacity="0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" VerticalContentAlignment="Stretch">
                                            <ContentPresenter.RenderTransform>
                                                <TranslateTransform Y="20"/>
                                            </ContentPresenter.RenderTransform>
                                        </ContentPresenter>
                                    </Grid>
                                    <controls:LayoutTransformControl x:Name="PART_LayoutTransformer" Grid.ColumnSpan="2" Grid.Column="0" RenderTransformOrigin="0.5,0.5" Grid.RowSpan="1" Grid.Row="0">
                                        <controls:LayoutTransformControl.Transform>
                                            <RotateTransform x:Name="RotateLayoutTransform" Angle="0"/>
                                        </controls:LayoutTransformControl.Transform>
                                        <ToggleButton x:Name="PART_ExpanderToggleButton" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" MinHeight="40" MinWidth="40" AutomationProperties.Name="Expand" Style="{TemplateBinding HeaderStyle}" TabIndex="0"/>
                                    </controls:LayoutTransformControl>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MessageTextBoxStyle" TargetType="TextBox">
                <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}" />
                <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}" />
                <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextControlSelectionHighlightColor}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
                <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Normal" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border x:Name="BorderElement"
                                    Grid.Row="1"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Grid.ColumnSpan="2"
                                    Grid.RowSpan="1" />
                                <ScrollViewer x:Name="ContentElement"
                                    Grid.Row="1"
                                    HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                    IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                    IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                    IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                    Margin="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    IsTabStop="False"
                                    VerticalAlignment="Center"
                                    AutomationProperties.AccessibilityView="Raw"
                                    ZoomMode="Disabled" />
                                <ContentPresenter x:Name="PlaceholderTextContentPresenter"
                                    Grid.Row="1"
                                    Opacity="0.56"
                                    Foreground="{TemplateBinding Foreground}"
                                    Margin="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    Grid.ColumnSpan="2"
                                    VerticalAlignment="Center"                                    
                                    Content="{TemplateBinding PlaceholderText}"
                                    TextWrapping="NoWrap"
                                    IsHitTestVisible="False" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="IconButtonTemplate" TargetType="Button">
                <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <Storyboard>
                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="PointerOver">
                                <VisualState.Setters>
                                    <Setter Target="RootGrid.(media:RevealBrush.State)" Value="PointerOver"/>
                                    <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundPointerOver}"/>
                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}"/>
                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPointerOver}"/>
                                </VisualState.Setters>
                                <Storyboard>
                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <VisualState.Setters>
                                    <Setter Target="RootGrid.(media:RevealBrush.State)" Value="Pressed"/>
                                    <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundPressed}"/>
                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}"/>
                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPressed}"/>
                                </VisualState.Setters>
                                <Storyboard>
                                    <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushDisabled}"/>
                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundDisabled}"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="IconToggleButtonTemplate" TargetType="ToggleButton">
                <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <Storyboard>
                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="PointerOver">
                                <VisualState.Setters>
                                    <Setter Target="RootGrid.(media:RevealBrush.State)" Value="PointerOver"/>
                                    <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundPointerOver}"/>
                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushPointerOver}"/>
                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundPointerOver}"/>
                                </VisualState.Setters>
                                <Storyboard>
                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <VisualState.Setters>
                                    <Setter Target="RootGrid.(media:RevealBrush.State)" Value="Pressed"/>
                                    <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundPressed}"/>
                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushPressed}"/>
                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundPressed}"/>
                                </VisualState.Setters>
                                <Storyboard>
                                    <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushDisabled}"/>
                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundDisabled}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Checked">
                                <VisualState.Setters>
                                    <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundChecked}"/>
                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushChecked}"/>
                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundChecked}"/>
                                </VisualState.Setters>
                                <Storyboard>
                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="CheckedPointerOver">
                                <VisualState.Setters>
                                    <Setter Target="RootGrid.(media:RevealBrush.State)" Value="PointerOver"/>
                                    <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundCheckedPointerOver}"/>
                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedPointerOver}"/>
                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}"/>
                                </VisualState.Setters>
                                <Storyboard>
                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="CheckedPressed">
                                <VisualState.Setters>
                                    <Setter Target="RootGrid.(media:RevealBrush.State)" Value="Pressed"/>
                                    <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundCheckedPressed}"/>
                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedPressed}"/>
                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPressed}"/>
                                </VisualState.Setters>
                                <Storyboard>
                                    <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="CheckedDisabled">
                                <VisualState.Setters>
                                    <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundCheckedDisabled}"/>
                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedDisabled}"/>
                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedDisabled}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Indeterminate">
                                <VisualState.Setters>
                                    <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundIndeterminate}"/>
                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminate}"/>
                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminate}"/>
                                </VisualState.Setters>
                                <Storyboard>
                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="IndeterminatePointerOver">
                                <VisualState.Setters>
                                    <Setter Target="RootGrid.(media:RevealBrush.State)" Value="PointerOver"/>
                                    <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundIndeterminatePointerOver}"/>
                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminatePointerOver}"/>
                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminatePointerOver}"/>
                                </VisualState.Setters>
                                <Storyboard>
                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="IndeterminatePressed">
                                <VisualState.Setters>
                                    <Setter Target="RootGrid.(media:RevealBrush.State)" Value="Pressed"/>
                                    <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundIndeterminatePressed}"/>
                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminatePressed}"/>
                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminatePressed}"/>
                                </VisualState.Setters>
                                <Storyboard>
                                    <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="IndeterminateDisabled">
                                <VisualState.Setters>
                                    <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundIndeterminateDisabled}"/>
                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminateDisabled}"/>
                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminateDisabled}"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
            </ControlTemplate>

            <Style TargetType="TextBox" x:Key="AutoSuggestBoxTextBoxStyle">
                <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}" />
                <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}" />
                <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}" />
                <Setter Property="Background" Value="{ThemeResource TextControlBackground}" />
                <Setter Property="BorderBrush" Value="{ThemeResource TextControlBorderBrush}" />
                <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextControlSelectionHighlightColor}" />
                <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}" />
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
                <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>

                                <Grid.Resources>
                                    <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Grid x:Name="ButtonLayoutGrid"
                                                        BorderBrush="{ThemeResource TextControlButtonBorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Background="{ThemeResource TextControlButtonBackground}">

                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup x:Name="CommonStates">
                                                                <VisualState x:Name="Normal" />

                                                                <VisualState x:Name="PointerOver">
                                                                    <Storyboard>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}" />
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}" />
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}" />
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualState>

                                                                <VisualState x:Name="Pressed">
                                                                    <Storyboard>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}" />
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}" />
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}" />
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualState>

                                                                <VisualState x:Name="Disabled">
                                                                    <Storyboard>
                                                                        <DoubleAnimation Storyboard.TargetName="ButtonLayoutGrid"
                                                                    Storyboard.TargetProperty="Opacity"
                                                                    To="0"
                                                                    Duration="0" />
                                                                    </Storyboard>
                                                                </VisualState>
                                                            </VisualStateGroup>
                                                        </VisualStateManager.VisualStateGroups>
                                                        <TextBlock x:Name="GlyphElement"
                                                            Foreground="{ThemeResource TextControlButtonForeground}"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Center"
                                                            FontStyle="Normal"
                                                            FontSize="{ThemeResource AutoSuggestBoxIconFontSize}"
                                                            Text="&#xE10A;"
                                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                                            AutomationProperties.AccessibilityView="Raw" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <Style x:Name="QueryButtonStyle" TargetType="Button">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <ContentPresenter x:Name="ContentPresenter"
                                                        Background="{ThemeResource TextControlButtonBackground}"
                                                        BorderBrush="{ThemeResource TextControlButtonBorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Content="{TemplateBinding Content}"
                                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                                        ContentTransitions="{TemplateBinding ContentTransitions}"
                                                        FontSize="{ThemeResource AutoSuggestBoxIconFontSize}"
                                                        Padding="{TemplateBinding Padding}"
                                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        AutomationProperties.AccessibilityView="Raw">

                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup x:Name="CommonStates">
                                                                <VisualState x:Name="Normal" />

                                                                <VisualState x:Name="PointerOver">
                                                                    <Storyboard>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}" />
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}" />
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}" />
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualState>

                                                                <VisualState x:Name="Pressed">
                                                                    <Storyboard>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}" />
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}" />
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}" />
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualState>

                                                                <VisualState x:Name="Disabled">
                                                                    <Storyboard>
                                                                        <DoubleAnimation Storyboard.TargetName="ContentPresenter"
                                                                    Storyboard.TargetProperty="Opacity"
                                                                    To="0"
                                                                    Duration="0" />
                                                                    </Storyboard>
                                                                </VisualState>
                                                            </VisualStateGroup>
                                                        </VisualStateManager.VisualStateGroups>
                                                    </ContentPresenter>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Grid.Resources>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">

                                        <VisualState x:Name="Disabled">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Normal" />

                                        <VisualState x:Name="PointerOver">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Focused">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundFocused}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocused}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushFocused}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundFocused}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="RequestedTheme">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Light" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="QueryButton" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForeground}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ButtonStates">
                                        <VisualState x:Name="ButtonVisible">
                                            <VisualState.Setters>
                                                <Setter Target="DeleteButton.Visibility" Value="Visible"/>
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="ButtonCollapsed" />

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Border x:Name="BorderElement"
                                    Grid.Row="1"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Grid.ColumnSpan="3"
                                    Grid.RowSpan="1" />
                                <ContentPresenter x:Name="ContentElement"
                                    Grid.Row="1"
                                    VerticalAlignment="Center"
                                    Margin="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    AutomationProperties.AccessibilityView="Raw" />
                                <ContentControl x:Name="PlaceholderTextContentPresenter"
                                    Grid.Row="1"
                                    Foreground="{ThemeResource TextControlPlaceholderForeground}"
                                    Margin="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    IsTabStop="False"
                                    Grid.ColumnSpan="3"
                                    Content="{TemplateBinding PlaceholderText}"
                                    VerticalAlignment="Center"
                                    IsHitTestVisible="False" />
                                <Button x:Name="DeleteButton"
                                    Grid.Row="1"
                                    Style="{StaticResource DeleteButtonStyle}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    IsTabStop="False"
                                    Grid.Column="1"
                                    Visibility="Collapsed"
                                    FontSize="{TemplateBinding FontSize}"
                                    MinWidth="34"
                                    AutomationProperties.AccessibilityView="Raw"
                                    VerticalAlignment="Stretch" />
                                <Button x:Name="QueryButton"
                                    Grid.Row="1"
                                    Style="{StaticResource QueryButtonStyle}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    IsTabStop="False"
                                    Grid.Column="2"
                                    FontSize="{TemplateBinding FontSize}"
                                    MinWidth="34"
                                    Width="{TemplateBinding Height}"
                                    VerticalAlignment="Stretch"
                                    AutomationProperties.AccessibilityView="Raw"/>
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Default Style for AutoSuggestBox -->
            <Style x:Key="CleanAutoSuggestBox" TargetType="AutoSuggestBox">
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="TextBoxStyle" Value="{StaticResource AutoSuggestBoxTextBoxStyle}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="AutoSuggestBox">
                            <Grid x:Name="LayoutRoot">

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="Orientation">
                                        <VisualState x:Name="Landscape" />
                                        <VisualState x:Name="Portrait" />

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <TextBox x:Name="TextBox"
                                    Style="{TemplateBinding TextBoxStyle}"
                                    PlaceholderText="{TemplateBinding PlaceholderText}"
                                    Header="{TemplateBinding Header}"
                                    Width="{TemplateBinding Width}"
                                    ScrollViewer.BringIntoViewOnFocusChange="False"
                                    Canvas.ZIndex="0"
                                    Margin="0"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    DesiredCandidateWindowAlignment="BottomEdge"
                                    UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}" />

                                <Popup x:Name="SuggestionsPopup">
                                    <Border x:Name="SuggestionsContainer">
                                        <ListView x:Name="SuggestionsList"
                                            Background="{ThemeResource AutoSuggestBoxSuggestionsListBackground}"
                                            BorderThickness="{ThemeResource AutoSuggestListBorderThemeThickness}"
                                            BorderBrush="{ThemeResource AutoSuggestBoxSuggestionsListBorderBrush}"
                                            DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                            IsItemClickEnabled="True"
                                            ItemTemplate="{TemplateBinding ItemTemplate}"
                                            ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                            MaxHeight="{ThemeResource AutoSuggestListMaxHeight}"
                                            Margin="{ThemeResource AutoSuggestListMargin}"
                                            Padding="{ThemeResource AutoSuggestListPadding}" />
                                    </Border>
                                </Popup>

                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
        </ResourceDictionary>
    </Application.Resources>
</Application>